# Application servers configuration
servers:
  # HTTP server configurations
  - type: 'http'
    plugin: '@ckenx/kenx-http'
    key: 'default' # Optional value
    HOST: 0.0.0.0
    PORT: '[env]:HTTP_PORT'
    application: '[frameworks]:express-app'
  
  # Socket.io server configurations
  - type: 'socketio'
    plugin: '@ckenx/kenx-socketio'
    bindTo: 'http:default'
    adapter: '[databases]:redis-db'
    options:
      cookie: false
      allowEIO3: true
      serveClient: true
      connectTimeout: 15000
  
  # Vite server configurations
  - type: 'vite'
    plugin: '@ckenx/kenx-vite'
    # HOST: 0.0.0.0
    # PORT: '[env]:VITE_PORT'
    bindTo: 'http:default'
    builder: true
    options:
      root: './src/views'
      # Whether your application is a Single Page Application (SPA), a Multi 
      # Page Application (MPA), or Custom Application (SSR and frameworks with 
      # custom HTML handling):
      #
      # 'spa': Include HTML middlewares and use SPA fallback. 
      #        Configure `sirv` with single: true in preview
      # 'mpa': Include HTML middlewares
      # 'custom': Disable Vite's own HTML serving logic so parent 
      #            server can take control. This requires creating 
      #            Vite server in middleware mode by setting
      #            `server: { middlewareMode: true }`
      appType: 'custom' # spa, mpa, custom
      test:
        globals: true
        # 'happy-dom' or 'jsdom' for a DOM-like environment
        environment: 'jsdom'
        setupFiles:
          - ../test/ui.test.ts
      plugins:
        - vite.plugins